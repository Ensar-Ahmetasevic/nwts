model UserProfile {
  id                   Int                   @id @default(autoincrement())
  email                String                @unique
  password             String
  createdAt            DateTime              @default(now())
  companyId            Int
  companyName          String
  address              String
  administrator        Boolean
  shippingInformations ShippingInformation[]
}

model ShippingInformation {
  id                    Int                @id @default(autoincrement())
  createdAt             DateTime           @default(now())
  containerProfiles     ContainerProfile[]
  userProfileForeignKey Int                @unique
  userProfile           UserProfile        @relation(fields: [userProfileForeignKey], references: [id], onDelete: Cascade)
}

model ContainerProfile {
  id                            Int                 @id @default(autoincrement())
  createdAt                     DateTime            @default(now())
  quantity                      Int
  shippingInformationForeignKey Int                 @unique
  shippingInformation           ShippingInformation @relation(fields: [shippingInformationForeignKey], references: [id], onDelete: Cascade)
  locationOriginForeignKey      Int                 @unique
  locationOrigin                LocationOrigin      @relation(fields: [locationOriginForeignKey], references: [id], onDelete: Cascade)
  wasteProfileForeignKey        Int                 @unique
  wasteProfile                  WasteProfile        @relation(fields: [wasteProfileForeignKey], references: [id], onDelete: Cascade)
  containerTypeForeignKey       Int                 @unique
  containerType                 ContainerType       @relation(fields: [containerTypeForeignKey], references: [id], onDelete: Cascade)
}

model LocationOrigin {
  id                Int                @id @default(autoincrement())
  name              String
  address           String
  origin            String
  containerProfiles ContainerProfile[]

  // If we have a "containerProfile" field in the "LocationOrigin" model that is of type "ContainerProfile[]", 
  // it means that it is expected that one location can be associated with multiple "ContainerProfile" entities.
}

model WasteProfile {
  id                          Int                @id @default(autoincrement())
  name                        String
  typeOfWaste                 String
  wasteDescription            String
  risksAndHazards             String
  processingMethods           String
  physicalProperties          String
  chemicalProperties          String
  biologicalProperties        String
  collectionProcedures        String
  recommendationsForTransport String
  containerProfiles           ContainerProfile[]
}

model ContainerType {
  id                 Int                @id @default(autoincrement())
  name               String
  material           String
  volume             Int
  carryingCapacity   Int
  radioactivityLevel String
  physicalProperties String
  footprint          Int
  description        String
  containerProfiles  ContainerProfile[]
}
